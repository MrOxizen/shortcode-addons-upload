{"version":3,"sources":["jquery-asProgress.es.js"],"names":["global","factory","define","amd","exports","require","mod","jQuery","jqueryAsProgressEs","this","_jquery","_classCallCheck","instance","Constructor","TypeError","isPercentage","n","includes","getTime","window","performance","now","Date","_jquery2","obj","__esModule","default","_interopRequireDefault","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","DEFAULTS","namespace","bootstrap","min","max","goal","speed","easing","labelCallback","getPercentage","easingBezier","mX1","mY1","mX2","mY2","a","aA1","aA2","b","c","calcBezier","aT","getSlope","getTForX","aX","aGuessT","currentSlope","css","fn","EASING","ease","linear","ease-in","ease-out","ease-in-out","vendors","requestAnimationFrame","vp","cancelAnimationFrame","test","navigator","userAgent","lastTime","callback","nextTime","Math","setTimeout","clearTimeout","asProgress","element","options","$element","extend","data","$target","find","classes","label","bar","disabled","addClass","attr","parseInt","first","_frameId","_states","initialized","_trigger","init","value","$bar","$label","reset","eventType","_len","arguments","params","Array","_key","concat","trigger","NAMESPACE$1","onFunction","replace","word","substring","toUpperCase","apply","state","round","is","that","_clear","start","startTime","animation","time","distance","next","_update","percenage","html","call","go","removeClass","name","_len2","args","_key2","undefined","isPlainObject"],"mappings":"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","file":"jquery-asProgress.min.js","sourcesContent":["/**\n* jQuery asProgress v0.2.4\n* https://github.com/amazingSurge/jquery-asProgress\n*\n* Copyright (c) amazingSurge\n* Released under the LGPL-3.0 license\n*/\nimport $ from 'jquery';\n\nvar DEFAULTS = {\n  namespace: 'progress',\n  bootstrap: false,\n  min: 0,\n  max: 100,\n  goal: 100,\n  speed: 20, // speed of 1/100\n  easing: 'ease',\n  labelCallback(n) {\n    const percentage = this.getPercentage(n);\n    return `${percentage}%`;\n  }\n};\n\nlet easingBezier = (mX1, mY1, mX2, mY2) => {\n  'use strict';\n\n  let a = (aA1, aA2) => {\n    return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n  };\n\n  let b = (aA1, aA2) => {\n    return 3.0 * aA2 - 6.0 * aA1;\n  };\n\n  let c = (aA1) => {\n    return 3.0 * aA1;\n  };\n\n  // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n  let calcBezier = (aT, aA1, aA2) => {\n    return ((a(aA1, aA2) * aT + b(aA1, aA2)) * aT + c(aA1)) * aT;\n  };\n\n  // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n  let getSlope = (aT, aA1, aA2) => {\n    return 3.0 * a(aA1, aA2) * aT * aT + 2.0 * b(aA1, aA2) * aT + c(aA1);\n  };\n\n  let getTForX = (aX) => {\n    // Newton raphson iteration\n    let aGuessT = aX;\n    for (let i = 0; i < 4; ++i) {\n      let currentSlope = getSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) {\n        return aGuessT;\n      }\n      let currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  };\n\n  if (mX1 === mY1 && mX2 === mY2) {\n    return {\n      css: 'linear',\n      fn(aX) {\n        return aX;\n      }\n    };\n  }\n\n  return {\n    css: `cubic-bezier(${mX1},${mY1},${mX2},${mY2})`,\n    fn(aX) {\n      return calcBezier(getTForX(aX), mY1, mY2);\n    }\n  };\n};\n\nvar EASING = {\n  ease: easingBezier(0.25, 0.1, 0.25, 1.0),\n  linear: easingBezier(0.00, 0.0, 1.00, 1.0),\n  'ease-in': easingBezier(0.42, 0.0, 1.00, 1.0),\n  'ease-out': easingBezier(0.00, 0.0, 0.58, 1.0),\n  'ease-in-out': easingBezier(0.42, 0.0, 0.58, 1.0)\n};\n\nif (!Date.now){\n  Date.now = () => new Date().getTime();\n}\n\nconst vendors = ['webkit', 'moz'];\nfor (let i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n  const vp = vendors[i];\n  window.requestAnimationFrame = window[`${vp}RequestAnimationFrame`];\n  window.cancelAnimationFrame = (window[`${vp}CancelAnimationFrame`]\n                 || window[`${vp}CancelRequestAnimationFrame`]);\n}\n\nif (/iP(ad|hone|od).*OS (6|7)/.test(window.navigator.userAgent) // iOS6 is buggy\n  || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n  let lastTime = 0;\n  window.requestAnimationFrame = callback => {\n    const now = Date.now();\n    const nextTime = Math.max(lastTime + 16, now);\n    return setTimeout(() => {\n        callback(lastTime = nextTime);\n      },\n      nextTime - now);\n  };\n  window.cancelAnimationFrame = clearTimeout;\n}\n\nfunction isPercentage(n) {\n  return typeof n === 'string' && n.includes('%');\n}\n\nfunction getTime(){\n  if (typeof window.performance !== 'undefined' && window.performance.now) {\n    return window.performance.now();\n  }\n  return Date.now();\n}\n\nconst NAMESPACE$1 = 'asProgress';\n\n/**\n * Plugin constructor\n **/\nclass asProgress {\n  constructor(element, options) {\n    this.element = element;\n    this.$element = $(element);\n\n    this.options = $.extend({}, DEFAULTS, options, this.$element.data());\n\n    if(this.options.bootstrap){\n      this.namespace = 'progress';\n\n      this.$target = this.$element.find('.progress-bar');\n\n      this.classes = {\n        label: `${this.namespace}-label`,\n        bar: `${this.namespace}-bar`,\n        disabled: 'is-disabled'\n      };\n    } else {\n      this.namespace = this.options.namespace;\n\n      this.classes = {\n        label: `${this.namespace}__label`,\n        bar: `${this.namespace}__bar`,\n        disabled: 'is-disabled'\n      };\n\n      this.$target = this.$element;\n\n      this.$element.addClass(this.namespace);\n    }\n\n    this.easing = EASING[this.options.easing] || EASING.ease;\n\n    this.min = this.$target.attr('aria-valuemin');\n    this.max = this.$target.attr('aria-valuemax');\n    this.min = this.min? parseInt(this.min, 10): this.options.min;\n    this.max = this.max? parseInt(this.max, 10): this.options.max;\n    this.first = this.$target.attr('aria-valuenow');\n    this.first = this.first? parseInt(this.first, 10): this.min;\n\n    this.now = this.first;\n    this.goal = this.options.goal;\n    this._frameId = null;\n\n    // Current state information.\n    this._states = {};\n\n    this.initialized = false;\n    this._trigger('init');\n    this.init();\n  }\n\n  init() {\n    this.$bar = this.$element.find(`.${this.classes.bar}`);\n    this.$label = this.$element.find(`.${this.classes.label}`);\n\n    this.reset();\n    this.initialized = true;\n    this._trigger('ready');\n  }\n\n  _trigger(eventType, ...params) {\n    let data = [this].concat(params);\n\n    // event\n    this.$element.trigger(`${NAMESPACE$1}::${eventType}`, data);\n\n    // callback\n    eventType = eventType.replace(/\\b\\w+\\b/g, (word) => {\n      return word.substring(0, 1).toUpperCase() + word.substring(1);\n    });\n    let onFunction = `on${eventType}`;\n\n    if (typeof this.options[onFunction] === 'function') {\n      this.options[onFunction].apply(this, params);\n    }\n  }\n\n  /**\n   * Checks whether the carousel is in a specific state or not.\n   */\n  is(state) {\n    return this._states[state] && this._states[state] > 0;\n  }\n\n  getPercentage(n) {\n    return Math.round(100 * (n - this.min) / (this.max - this.min));\n  }\n\n  go(goal) {\n    if(!this.is('disabled')) {\n      const that = this;\n      this._clear();\n\n      if (isPercentage(goal)) {\n        goal = parseInt(goal.replace('%', ''), 10);\n        goal = Math.round(this.min + (goal / 100) * (this.max - this.min));\n      }\n      if (typeof goal === 'undefined') {\n        goal = this.goal;\n      }\n\n      if (goal > this.max) {\n        goal = this.max;\n      } else if (goal < this.min) {\n        goal = this.min;\n      }\n\n      const start = that.now;\n      const startTime = getTime();\n      const animation = time => {\n        const distance = (time - startTime)/that.options.speed;\n        let next = Math.round(that.easing.fn(distance/100) * (that.max - that.min));\n\n        if(goal > start){\n          next = start + next;\n          if(next > goal){\n            next = goal;\n          }\n        } else{\n          next = start - next;\n          if(next < goal){\n            next = goal;\n          }\n        }\n\n        that._update(next);\n        if (next === goal) {\n          window.cancelAnimationFrame(that._frameId);\n          that._frameId = null;\n\n          if (that.now === that.goal) {\n            that._trigger('finish');\n          }\n        } else {\n          that._frameId =  window.requestAnimationFrame(animation);\n        }\n      };\n\n      that._frameId =  window.requestAnimationFrame(animation);\n    }\n  }\n\n  _update(n) {\n    this.now = n;\n\n    const percenage = this.getPercentage(this.now);\n    this.$bar.css('width', `${percenage}%`);\n    this.$target.attr('aria-valuenow', this.now);\n    if (this.$label.length > 0 && typeof this.options.labelCallback === 'function') {\n      this.$label.html(this.options.labelCallback.call(this, [this.now]));\n    }\n\n    this._trigger('update', n);\n  }\n\n  _clear() {\n    if (this._frameId) {\n      window.cancelAnimationFrame(this._frameId);\n      this._frameId = null;\n    }\n  }\n\n  get() {\n    return this.now;\n  }\n\n  start() {\n    if(!this.is('disabled')) {\n      this._clear();\n      this._trigger('start');\n      this.go(this.goal);\n    }\n  }\n\n  reset() {\n    if(!this.is('disabled')) {\n      this._clear();\n      this._update(this.first);\n      this._trigger('reset');\n    }\n  }\n\n  stop() {\n    this._clear();\n    this._trigger('stop');\n  }\n\n  finish() {\n    if(!this.is('disabled')) {\n      this._clear();\n      this._update(this.goal);\n      this._trigger('finish');\n    }\n  }\n\n  destroy() {\n    this.$element.data(NAMESPACE$1, null);\n    this._trigger('destroy');\n  }\n\n  enable() {\n    this._states.disabled = 0;\n\n    this.$element.removeClass(this.classes.disabled);\n  }\n\n  disable() {\n    this._states.disabled = 1;\n\n    this.$element.addClass(this.classes.disabled);\n  }\n\n  static registerEasing(name, ...args) {\n    EASING[name] = easingBezier(...args);\n  }\n\n  static getEasing(name) {\n    return EASING[name];\n  }\n\n  static setDefaults(options) {\n    $.extend(DEFAULTS, $.isPlainObject(options) && options);\n  }\n}\n\nvar info = {\n  version:'0.2.4'\n};\n\nconst NAMESPACE = 'asProgress';\nconst OtherAsProgress = $.fn.asProgress;\n\nconst jQueryAsProgress = function(options, ...args) {\n  if (typeof options === 'string') {\n    const method = options;\n\n    if (/^_/.test(method)) {\n      return false;\n    } else if ((/^(get)/.test(method))) {\n      const instance = this.first().data(NAMESPACE);\n      if (instance && typeof instance[method] === 'function') {\n        return instance[method](...args);\n      }\n    } else {\n      return this.each(function() {\n        const instance = $.data(this, NAMESPACE);\n        if (instance && typeof instance[method] === 'function') {\n          instance[method](...args);\n        }\n      });\n    }\n  }\n\n  return this.each(function() {\n    if (!$(this).data(NAMESPACE)) {\n      $(this).data(NAMESPACE, new asProgress(this, options));\n    }\n  });\n};\n\n$.fn.asProgress = jQueryAsProgress;\n\n$.asProgress = $.extend({\n  setDefaults: asProgress.setDefaults,\n  registerEasing: asProgress.registerEasing,\n  getEasing: asProgress.getEasing,\n  noConflict: function() {\n    $.fn.asProgress = OtherAsProgress;\n    return jQueryAsProgress;\n  }\n}, info);\n"]}